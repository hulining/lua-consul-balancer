sudo: required
dist: trusty

os: linux

language: c

compiler:
  - gcc
  - clang

cache:
  directories:
  - download-cache

env:
  global:
    - JOBS=3
    - NGX_BUILD_JOBS=$JOBS
    - LUAJIT_PREFIX=/opt/luajit21
    - LUAJIT_LIB=$LUAJIT_PREFIX/lib
    - LUAJIT_INC=$LUAJIT_PREFIX/include/luajit-2.1
    - LUA_INCLUDE_DIR=$LUAJIT_INC
    - OPENSSL_PREFIX=/opt/ssl
    - OPENSSL_LIB=$OPENSSL_PREFIX/lib
    - OPENSSL_INC=$OPENSSL_PREFIX/include
    - OPENSSL_VER=1.0.2h
    - CONSUL_VER=0.7.4
    - LD_LIBRARY_PATH=$LUAJIT_LIB:$LD_LIBRARY_PATH
    - TEST_NGINX_SLEEP=0.006
  matrix:
    - NGINX_VERSION=1.9.15
    #- NGINX_VERSION=1.10.0

install:
  - if [ ! -d download-cache ]; then mkdir download-cache; fi
  - if [ ! -f download-cache/openssl-$OPENSSL_VER.tar.gz ]; then wget -O download-cache/openssl-$OPENSSL_VER.tar.gz https://www.openssl.org/source/openssl-$OPENSSL_VER.tar.gz; fi
  - if [ ! -f download-cache/consul_${CONSUL_VER}_linux_amd64.zip ]; then wget -O download-cache/consul_${CONSUL_VER}_linux_amd64.zip https://releases.hashicorp.com/consul/${CONSUL_VER}/consul_${CONSUL_VER}_linux_amd64.zip; fi
  - sudo apt-get install -qq -y cpanminus axel
  - sudo cpanm --notest Test::Nginx > build.log 2>&1 || (cat build.log && exit 1)
  - wget http://nginx.org/download/nginx-${NGINX_VERSION}.tar.gz
  - git clone https://github.com/openresty/openresty.git ../openresty
  - git clone https://github.com/openresty/nginx-devel-utils.git
  - git clone https://github.com/openresty/lua-cjson.git
  - git clone https://github.com/pintsized/lua-resty-http.git
  - git clone https://github.com/openresty/lua-nginx-module.git ../lua-nginx-module
  - git clone https://github.com/openresty/echo-nginx-module.git ../echo-nginx-module
  - git clone https://github.com/openresty/no-pool-nginx.git ../no-pool-nginx
  - git clone -b v2.1-agentzh https://github.com/openresty/luajit2.git

script:
  #luajit install
  - cd luajit2/
  - make -j$JOBS CCDEBUG=-g Q= PREFIX=$LUAJIT_PREFIX CC=$CC XCFLAGS='-DLUA_USE_APICHECK -DLUA_USE_ASSERT' > build.log 2>&1 || (cat build.log && exit 1)
  - sudo make install PREFIX=$LUAJIT_PREFIX > build.log 2>&1 || (cat build.log && exit 1)
  - cd -
  #lua dependecies
  - cd lua-cjson && make && sudo PATH=$PATH make install && cd -
  - cd lua-resty-http && make && sudo PATH=$PATH make install && cd -
  #openssl
  - tar zxf download-cache/openssl-$OPENSSL_VER.tar.gz
  - cd openssl-$OPENSSL_VER/
  - ./config shared --prefix=$OPENSSL_PREFIX -DPURIFY > build.log 2>&1 || (cat build.log && exit 1)
  - make -j$JOBS > build.log 2>&1 || (cat build.log && exit 1)
  - sudo make PATH=$PATH install_sw > build.log 2>&1 || (cat build.log && exit 1)
  - cd -
  # consul
  - unzip download-cache/consul_${CONSUL_VER}_linux_amd64.zip
  - ./consul agent -dev > consul.out 2>&1 &
  #nginx install
  - export PATH=$PWD/work/nginx/sbin:$PWD/nginx-devel-utils:$PATH
  - export NGX_BUILD_CC=$CC
  - ngx-build $NGINX_VERSION --with-ipv6 --with-http_realip_module --with-http_ssl_module --add-module=../echo-nginx-module --add-module=../lua-nginx-module --with-debug
  - nginx -V
  - ldd `which nginx`|grep -E 'luajit|ssl|pcre'
  # consul fixtures
  - "curl -X PUT -d '{\"ID\": \"foo-1\", \"Name\": \"foo\", \"Port\": 667 }' http://127.0.0.1:8500/v1/agent/service/register"
  - "curl -X PUT -d '{\"ID\": \"foo-2\", \"Name\": \"foo\", \"Port\": 668 }' http://127.0.0.1:8500/v1/agent/service/register"
  - "curl -X PUT -d '{\"ID\": \"foo-3\", \"Name\": \"foo\", \"Port\": 669 }' http://127.0.0.1:8500/v1/agent/service/register"
  - "curl -X PUT -d '{\"ID\": \"bar-1\", \"Name\": \"foo\", \"Port\": 665 }' http://127.0.0.1:8500/v1/agent/service/register"
  #test launcher
  - prove -r t

